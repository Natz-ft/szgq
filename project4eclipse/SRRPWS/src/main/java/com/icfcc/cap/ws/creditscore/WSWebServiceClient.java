package com.icfcc.cap.ws.creditscore;

import java.net.MalformedURLException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Calendar;

import javax.xml.namespace.QName;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import com.icfcc.util.AESUtil;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

/**
 * This class was generated by Apache CXF 2.7.12
 * 2017-10-30T15:23:57.477+08:00
 * Generated source version: 2.7.12
 * 
 */
@Service
public final class WSWebServiceClient {

    private static final QName SERVICE_NAME = new QName("http://creditscore.ws.cap.cfcc.com/", "WSWebService");
    
    //用户名 
	@Value("${usercode}")
	public  String usercode;
    //可配置的webservice 路径
	@Value("${scoreURL}")
	public String scoreURL;
	//评分卡类型 
	@Value("${scoreCard}")
	public  String card;
	//加密的秘钥
	@Value("${scorekey}")
	public  String scorekey;
	//查询评分状态的 月份
    

    /**
     * 调用webservice 评分状态方法
     * 用来判断当月评分是否计算完
     * @return
     * @throws MalformedURLException 
     */
	public boolean  getStatus() throws MalformedURLException{
		boolean scoreInfo = false;
			//查询评分的评分卡编码
			String scoreCard =  AESUtil.encrypt(card,scorekey);
			String timeId = null;
			Calendar cal = Calendar.getInstance();
			SimpleDateFormat sdf = new SimpleDateFormat("yyyyMM");
			timeId = sdf.format(cal.getTime());
			//查询当月评分是否完成统计的月份
			String data = AESUtil.encrypt(timeId,scorekey);
        	 URL url =  new URL(scoreURL);
			 WSWebService_Service ss = new WSWebService_Service(url, SERVICE_NAME);
		     WSWebService port = ss.getWSWebServiceImplPort();  
		     //查询评分状态 分为以下三种情况
		     //第一种情况 如果返回为后面的结果说明评分异常 （  0|接口查询参数为空    -1|查询异常 ） 
		     //第二种情况 如果返回后面结果，说明评分没有完成  1|[{"status":""}]    
		     //第三种请况 如果返回后面结果，说明评分完成  1|[{"status":"0"}]
		     String status= port.getStatus(scoreCard,  data);
		     if(null != status){
		    	 String rs =null;
		    	 try{
		    		 //解密
		    		 rs=AESUtil.decrypt(status,scorekey);
		    	 }catch(Exception e){
		    		 e.printStackTrace();
		    	 }
		    	 String scores[] = rs.split("\\|");
		    	//只判断返回结果 为 1的状态
		    	 if("1".equals(scores[0])){
		    		JSONArray compScores =  JSONArray.fromObject(scores[1]);
	    			JSONObject scoreJson = (JSONObject) compScores.get(0);
	    			String s = (String) scoreJson.get("status");
				     System.out.println("返回状态==================="+s);
	    			//如果返回 status 为 0 那么就是可以进行 评分结果查询
		    		if("0".equals(s)){
		    				scoreInfo=true;
	    			}
		    	 }
		     }
		return scoreInfo;
		
	}

	/**
	 * 根据评分卡 企业统一社会信用码去查询
	 * @return
	 * @throws MalformedURLException 
	 */
	public String  getScoreInfos(String codes) throws MalformedURLException{
		String scoreInfos=null;
		//查询评分的用户名
		String username =  AESUtil.encrypt(usercode,scorekey);
		//查询评分的企业 组织机构代码或者社会统一信用码 多个用  ,    隔开
		String creditcodes =  AESUtil.encrypt(codes,scorekey);
		//评分需要参数 写死的值
		String sourceSys =  AESUtil.encrypt("SECS",scorekey);
		//查询评分的评分卡编码
		String scoreCard =  AESUtil.encrypt(card,scorekey);
	     /* 
	      * 查询评分详情 参数 
	      * @param username    评分要用到的用户 （新版给 null）
	      * @param scoreCard    评分卡编码
	      * @param creditcodes  统一社会信用码或者组织机构代码 多个用 , 隔开
	      * @param sourceSys    写死的股权平台 SRRP
	      */
	
			URL url= new URL(scoreURL);
			 WSWebService_Service ss = new WSWebService_Service(url, SERVICE_NAME);
		     WSWebService port = ss.getWSWebServiceImplPort();  
		     String result = "";
		     result = port.getScoreInfos(username,scoreCard, creditcodes,sourceSys);
		     if(null != result){
		    	//返回类型  有一下俩种结果
		    	String backStr =  AESUtil.decrypt(result,scorekey);
		    	String []scorelist=backStr.split("\\|");
		    	if("1".equals(scorelist[0])){
		    		scoreInfos = scorelist[1];
		    	}
		    	 System.out.println("webservice查询出来的评分结果=="+scoreInfos);
		     }
		return scoreInfos;
	}
    
	
	public static void main(String[] args) {
		String a = "1|[{\"status\":\"0\"}]";
		String scores[] = a.split("\\|");
		System.out.println(a);
		System.out.println(scores[1]);
		JSONArray compScores =  JSONArray.fromObject(scores[1]);
		JSONObject scoreJson = (JSONObject) compScores.get(0);
		String s = (String) scoreJson.get("status");
		if("0".equals(s)){
			System.out.println(s);
		}else{
			System.out.println(111);
		}
	}
}