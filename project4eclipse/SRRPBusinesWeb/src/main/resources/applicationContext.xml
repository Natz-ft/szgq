<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
     http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
     http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd 
     http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd ">

	<!-- 开启注解配置，实现自动注入 -->
	<context:annotation-config />
	<!-- 开启注解事务，实现自动配置 -->
	<tx:annotation-driven />

	<context:property-placeholder
		ignore-unresolvable="true" location="classpath*:/db.properties" />
	<context:property-placeholder
		ignore-unresolvable="true" location="classpath*:/writeurl.properties" />
		<context:property-placeholder
		ignore-unresolvable="true" location="classpath*:/creditreport.properties" />
	<context:property-placeholder
		ignore-unresolvable="true" location="classpath*:/creditscore.properties" />
	<!-- 配置数据源 <jee:jndi-lookup id="FireflyDataSource" jndi-name="jdbc/firefly" 
		/> -->
	<!-- 数据源配置, 使用DBCP数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- Connection Pooling Info 最大 最小 链接数 -->
		<property name="initialSize" value="${dbcp.initialSize}" />
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="minIdle" value="${dbcp.minIdle}" />
		<property name="defaultAutoCommit" value="false" />
		<!-- 连接Idle一个小时后超时 -->
		<property name="timeBetweenEvictionRunsMillis" value="120000" />
		<property name="minEvictableIdleTimeMillis" value="120000" />
		<!-- 这里建议配置为TRUE，防止取到的连接不可用 --> 
		<property name="testOnBorrow" value="true" /> 
		<property name="testOnReturn" value="false" />
		<property name="filters" value="stat" />
	</bean>
	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.icfcc.*.*">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<property name="packagesToScan" value="com.icfcc.*.*" />
		<property name="jpaProperties">
			<props>
				<!-- 命名规则 My_NAME->MyName -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
				<!-- <prop key="hibernate.dialect">com.icfcc.credit.person.jpa.util.oracle.MyOracleDialect -->
				<!-- </prop> -->
			</props>
		</property>
	</bean>
	<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<bean factory-method="getDialect" class="com.icfcc.SRRPService.util.HibernateUtil">
				<constructor-arg ref="dataSource" />
			</bean>
		</property>
		<property name="showSql" value="false" />
	</bean>

	<!--factory-class 配置接收DAO的信息 -->
	<jpa:repositories base-package="com.icfcc.*.*"
		transaction-manager-ref="transactionManager"
		factory-class="com.icfcc.SRRPService.util.jpa.CommonRepositoryFactoryBean"
		entity-manager-factory-ref="entityManagerFactory" />


	<!-- Jpa 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- <bean id="sysUserRoleMenuService" class="com.icfcc.credit.platform.service.system.SysTemUserRoleMenuService"></bean> -->
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- 配置validtor消息文件位置 -->
	<!-- <bean id="messageSource" -->
	<!-- class="org.springframework.context.support.ReloadableResourceBundleMessageSource" -->
	<!-- p:fallbackToSystemLocale="true" p:useCodeAsDefaultMessage="false" -->
	<!-- p:defaultEncoding="UTF-8"> -->
	<!-- <description>Base message source to handle internationalization -->
	<!-- </description> -->
	<!-- <property name="basenames"> -->
	<!-- <list> -->
	<!-- <value>classpath:valid/validation.properties</value> -->
	<!-- </list> -->
	<!-- </property> -->
	<!-- </bean> -->

	<!-- JSR303 Validator定义 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<!-- <property name="validationMessageSource" ref="messageSource" /> -->
	</bean>


	<!-- Ehcache 配置 开始 -->
	<bean id="cacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:shiro/ehcache.xml" />
	</bean>

	<bean id="cache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager" ref="cacheManager" />
		<property name="cacheName" value="dictCache" />
	</bean>
	<!--Ehcache 配置 结束 -->

	<!-- AOP配置 -->
	<!-- 激活组件扫描功能,在包cn.ysh.studio.spring.aop及其子包下面自动扫描通过注解配置的组件 -->
	<context:component-scan base-package="com.icfcc.credit.platform.util" />
	<!-- 激活自动代理功能 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!-- AOP配置结束 -->



	<context:property-placeholder location="classpath:redis.properties" />
	<!-- 自定义Spring工具类 -->
	<bean id="springContextUtil" class="com.icfcc.credit.platform.util.SpringContextUtil"></bean>


	<!-- 自定义redisManager-redis -->
	<bean id="redisCacheManager" class="com.icfcc.ssrp.session.RedisCacheManager">
	<property name="redisManager" ref="redisManager" />
	</bean>

	<bean id="redisManager" class="com.icfcc.ssrp.session.RedisManager"></bean>

	<!-- session会话存储的实现类 -->
	<bean id="redisShiroSessionDAO" class="com.icfcc.ssrp.session.RedisSessionDAO">
	<property name="redisManager" ref="redisManager" />
	</bean>

	<!-- sessionManager -->
	<!-- session管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 设置全局会话超时时间，默认30分钟(1800000) -->
		<property name="globalSessionTimeout" value="1800000" />
		<!-- 是否在会话过期后会调用SessionDAO的delete方法删除会话 默认true -->
		<property name="deleteInvalidSessions" value="true" />
		<!-- 会话验证器调度时间 -->
		<property name="sessionValidationInterval" value="1800000" />
		<!-- session存储的实现 -->
		<property name="sessionDAO" ref="redisShiroSessionDAO" />
		<!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
		<property name="sessionIdCookie" ref="sharesession" />
		<!-- 定时检查失效的session -->
		<property name="sessionValidationSchedulerEnabled" value="true" />
	</bean>

	<!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
	<bean id="sharesession" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- cookie的name,对应的默认是 JSESSIONID -->
		<constructor-arg name="name" value="SHAREJSESSIONID" />
		<!-- jsessionId的path为 / 用于多个系统共享jsessionId -->
		<property name="path" value="/" />
		<property name="httpOnly" value="true" />
	</bean>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- <property name="sessionManager" ref="defaultWebSessionManager" /> -->
		<!-- <property name="cacheManager" ref="shiroEhcacheManager" /> -->
		 <!-- redis缓存 -->  
        <property name="cacheManager" ref="redisCacheManager" />
  
        <!-- sessionManager -->  
        <property name="sessionManager" ref="sessionManager"></property>
	</bean>
   <bean id="kickoutSessionControlFilter"   class="com.icfcc.ssrp.filter.KickoutSessionControlFilter">  
	    <property name="cacheManager" ref="redisCacheManager"/>  
	    <property name="sessionManager" ref="sessionManager"/>  
	    <property name="kickoutAfter" value="false"/>  
	    <property name="maxSession" value="1"/>  
	    <property name="kickoutUrl" value="/login?kickout=1"/>  
	</bean>    
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<property name="successUrl" value="/success" />
		<property name="filters">
		    <map>
		        <entry key="kickout" value-ref="kickoutSessionControlFilter"/>
		    </map>
		</property>
		<property name="filterChainDefinitions">
			<value>
			     /static/** = anon
			     /portal/demandQuery/viewDetail.do =authc
			     /portal/eventQuery/viewDetail.do= authc
			     /portal/investorQuery/viewDetail.do= authc
			     /portal/detailfinace* =authc
			     /portal/detailinvestevent* =authc
			     /portal/** = anon
			     /home/srrp/fileserver/** = anon
			     /newCompany/** = anon
			     /portal/** = anon
			     /home/srrp/fileserver/** = anon
			     /contantUs/** = anon
			     /demandQuery/** = anon
			     /index/** = anon
			     /newInfos/** = anon
			     /restWS/** = anon
			     /sms/**= anon
			     /result/** = anon
			     /initInfo/** = anon
				  /** = user,kickout
			</value>
		</property>
	</bean>
	
</beans>