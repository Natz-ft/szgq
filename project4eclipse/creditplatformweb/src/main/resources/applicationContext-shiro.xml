<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd"
	default-lazy-init="true" >
 
	<description>Shiro安全配置</description>
	
	<bean id="myCaptchaFilter" class="com.icfcc.credit.platform.filter.FormAuthenticationCaptchaFilter"/>
	
	<!-- Shiro's main business-tier object for web-enabled applications -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- <property name="sessionManager" ref="defaultWebSessionManager" /> -->
		<property name="realm" ref="shiroDbRealm" />
		<!-- <property name="cacheManager" ref="shiroEhcacheManager" /> -->
		 <!-- redis缓存 -->  
        <property name="cacheManager" ref="redisCacheManager" />  
  
        <!-- sessionManager -->  
        <property name="sessionManager" ref="sessionManager"></property>  
	</bean>
	
	<!-- 缓存管理器redis-start -->
	<!-- 自定义redisManager-redis -->  
    <bean id="redisCacheManager" class="com.icfcc.credit.platform.session.RedisCacheManager">  
        <property name="redisManager" ref="redisManager" />  
    </bean>  
    <!-- 自定义cacheManager -->  
    <bean id="redisCache" class="com.icfcc.credit.platform.session.RedisCache">  
        <constructor-arg ref="redisManager"></constructor-arg>  
    </bean>  
  
    <bean id="redisManager" class="com.icfcc.credit.platform.session.RedisManager"></bean>
	<!-- 缓存管理器redis-end -->
	
	<!-- session会话存储的实现类 -->  
    <bean id="redisShiroSessionDAO" class="com.icfcc.credit.platform.session.RedisSessionDAO">  
        <property name="redisManager" ref="redisManager" />  
    </bean> 
	
	<!-- sessionManager -->  
    <!-- session管理器 -->  
    <bean id="sessionManager"  
        class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">  
        <!-- 设置全局会话超时时间，默认30分钟(1800000) -->  
        <property name="globalSessionTimeout" value="1800000" /> 
        <!-- 是否在会话过期后会调用SessionDAO的delete方法删除会话 默认true -->  
        <property name="deleteInvalidSessions" value="true" />  
  
        <!-- 会话验证器调度时间 -->  
        <property name="sessionValidationInterval" value="1800000" /> 
  
        <!-- session存储的实现 -->  
        <property name="sessionDAO" ref="redisShiroSessionDAO" />  
        <!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->  
        <property name="sessionIdCookie" ref="sharesession" />  
        <!-- 定时检查失效的session -->  
        <property name="sessionValidationSchedulerEnabled" value="true" />  
  
    </bean>
	
	<!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->  
    <bean id="sharesession" class="org.apache.shiro.web.servlet.SimpleCookie">  
        <!-- cookie的name,对应的默认是 JSESSIONID -->  
        <constructor-arg name="name" value="SHAREJSESSIONID" />  
        <!-- jsessionId的path为 / 用于多个系统共享jsessionId -->  
        <property name="path" value="/" />  
        <property name="httpOnly" value="true"/>  
    </bean>  
	
	<!-- 項目自定义的Realm, 所有accountService依赖的dao都需要用depends-on声明 -->
	<bean id="shiroDbRealm" class="com.icfcc.credit.platform.service.system.ShiroDbRealm"
		depends-on="platformUserDao,platformUserActionLogDao,platformUserLoginLogDao,platformUserHistoryPasswordDao,platformConfigDao,platformRoleDao,platformRoleMenuDao,platformRoleButtonDao,platformUserRoleDao,companyBaseDao">
		<!-- <property name="authenticationCachingEnabled" value="true"></property> -->
	</bean>
	
	<!-- shiro控制并发登录人数Filter -->
	<bean id="kickoutSessionControlFilter"   
		class="com.icfcc.credit.platform.filter.KickoutSessionControlFilter">  
	    <property name="cacheManager" ref="redisCacheManager"/>  
	    <property name="sessionManager" ref="sessionManager"/>  
	  
	    <property name="kickoutAfter" value="false"/>  
	    <property name="maxSession" value="1"/>  
	    <property name="kickoutUrl" value="/login?kickout=1"/>  
	</bean>
	  
	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<property name="successUrl" value="/success" />
		<property name="filters">
		    <map>
		        <entry key="authc" value-ref="myCaptchaFilter"/>
		        <entry key="kickout" value-ref="kickoutSessionControlFilter"/>
		    </map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/login = authc
				/logout = logout
				/static/** = anon
				/test/** =authc
				/checkCode = anon
				/admin/** = user
				/** = user,kickout
			</value>
		</property>
	</bean>
	
	<!-- 用户授权信息Cache（本机内存实现） -->    
	<bean id="memoryConstrainedCacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>